import java.util.ArrayList;


public class Ir2 {
	
	// projektor OK
	static int[] data = new int[]{0, 1, 6, 4, 1, 5, 4, 2, 4, 8, 3, 1, 7, 3, 2, 1, 9, 6, 1, 0, 7, 4, 1, 3, 5, 3, 2, 6, 3, 2, 6, 9, 2, 1, 8, 2, 1, 1, 9, 5, 1, 2, 6, 3, 1, 5, 4, 2, 4, 8, 3, 1, 8, 9, 2, 1, 9, 2, 1, 1, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 10, 7, 1, 0, 0, 0, 0, 4, 5, 3, 4, 0, 0, 0, 0, 8, 2, 1, 10, 8, 0, 0, 0, 0, 1, 3, 6, 4, 0, 0, 0, 0, 6, 10, 1, 2, 0, 0, 0, 0, 11, 7, 1, 1, 0, 0, 0, 0, 5, 3, 5, 9, 0, 0, 0, 0, 3, 1, 12, 8, 0, 0, 0, 0, 0, 4, 7, 4, 3, 0, 0, 0, 0, 11, 3, 2, 11, 0, 0, 0, 0, 7, 1, 2, 8, 0, 0, 0, 0, 3, 6, 11, 4, 3, 0, 0, 0, 0, 13, 9, 8, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 3, 2, 12, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 12, 4, 2, 0, 0, 0, 0, 14, 9, 2, 1, 0, 0, 0, 0, 0, 4, 4, 10, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 9, 5, 3, 0, 0, 0, 0, 13, 4, 6, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 12, 5, 0, 0, 0, 0, 10, 14, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 4, 2, 13, 0, 0, 0, 0, 9, 2, 2, 10, 0, 0, 0, 0, 4, 7, 12, 5, 3, 0, 0, 0, 0, 15, 11, 2, 1, 0, 0, 0, 0, 7, 6, 4, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 10, 7, 1, 0, 0, 0, 2, 14, 5, 3, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 12, 6, 0, 0, 0, 0, 3, 16, 14, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 5, 3, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 7, 14, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

	// lyslist på ffb04f
	//static int[] data = new int[]{34, 68, 50, 25, 85, 68, 58, 80, 32, 40, 81, 43, 72, 84, 25, 61, 27, 28, 80, 74, 48, 74, 36, 30, 82, 49, 66, 81, 23, 53, 63, 32, 77, 80, 39, 69, 41, 23, 39, 56, 61, 80, 27, 47, 72, 36, 75, 83, 31, 66, 48, 24, 82, 65, 56, 79, 31, 38, 81, 43, 79, 84, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 57, 88, 42, 0, 0, 0, 35, 99, 27, 70, 72, 0, 0, 0, 44, 94, 47, 35, 36, 0, 0, 0, 0, 74, 81, 41, 7, 0, 0, 0, 23, 36, 113, 72, 13, 0, 0, 0, 92, 47, 112, 116, 6, 0, 0, 0, 128, 82, 97, 123, 1, 0, 0, 0, 126, 130, 59, 112, 2, 0, 0, 0, 108, 134, 45, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 86, 134, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148, 76, 151, 166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 179, 61, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 150, 120, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131, 67, 201, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 190, 135, 201, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 213, 149, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 86, 245, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 159, 210, 254, 0, 0, 0, 0, 252, 252, 135, 231, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 239, 140, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 147, 79, 26, 199, 0, 0, 0, 156, 243, 127, 9, 106, 0, 0, 0, 0, 32, 211, 214, 19, 0, 0, 0, 69, 14, 36, 109, 33, 0, 0, 0, 224, 213, 27, 111, 17, 0, 0, 0, 55, 103, 240, 185, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 193, 100, 45, 2, 0, 0, 0, 149, 43, 165, 14, 0, 0, 0, 0, 106, 48, 15, 194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 193, 33, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 147, 113, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 70, 206, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 13, 71, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; 
	// lyslist av fff807
	//static int[] data = new int[]{19, 10, 52, 27, 40, 56, 13, 29, 37, 18, 58, 51, 60, 52, 25, 12, 64, 34, 44, 66, 17, 27, 46, 23, 62, 63, 14, 54, 30, 15, 72, 43, 43, 70, 47, 23, 57, 28, 65, 73, 14, 53, 37, 19, 78, 52, 39, 72, 25, 18, 68, 34, 65, 80, 16, 50, 15, 23, 80, 62, 33, 74, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 24, 53, 66, 0, 0, 0, 0, 90, 42, 21, 104, 0, 0, 0, 0, 56, 73, 36, 104, 0, 0, 0, 0, 23, 114, 64, 79, 0, 0, 0, 0, 41, 111, 109, 20, 0, 0, 0, 90, 72, 84, 122, 34, 0, 0, 0, 124, 120, 31, 102, 23, 0, 0, 0, 86, 76, 38, 53, 3, 0, 0, 0, 25, 107, 67, 33, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 36, 148, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 114, 70, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 154, 58, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 49, 163, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 175, 91, 167, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 181, 215, 47, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 142, 135, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 74, 233, 194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 205, 90, 218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90, 224, 105, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 55, 4, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 151, 188, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 186, 6, 73, 37, 0, 0, 0, 178, 60, 212, 121, 61, 0, 0, 0, 17, 75, 102, 197, 41, 0, 0, 0, 217, 124, 63, 5, 5, 0, 0, 0, 96, 201, 103, 231, 9, 0, 0, 0, 64, 3, 60, 148, 5, 0, 0, 0, 105, 226, 251, 50, 0, 0, 0, 0, 173, 140, 239, 83, 0, 0, 0, 0, 102, 51, 174, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 175, 138, 70, 245, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 243, 185, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 187, 100, 217, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; 

	
	public static void main(String[] args) {
		boolean lys = true;
		double usecPerSample = 140.0;
		ArrayList<Integer> mørke = new ArrayList<>();
		ArrayList<Double> mørkeTidUsec = new ArrayList<>();
		
		int periodeStart = 0;
		
		for (int i = 1; i < data.length; ++i) {
			if (lys) {
				if (data[i-1] == 0 && data[i] == 0) {
					// lys til mørk (ikke lagre lyse perioder, bryr oss ikke)
					periodeStart = i;
					lys = false;
				}
			}
			else {
				if (data[i] != 0) {
					// mørk til lys
					int lengde = i - periodeStart;
					mørke.add(lengde);
					double tid = lengde * usecPerSample;
					mørkeTidUsec.add(tid);
					System.out.println(tid);
					lys = true;
				}
			}
		}
		String binær = "";
		int n = 0;
		
		for (Double tid : mørkeTidUsec) {
			if (tid < 2000.0) {
				boolean bit = tid > 1000.0;
				if (bit) {
					binær += "1";
				}
				else {
					binær += "0";
				}
			    n = (n << 1) + (bit ? 1 : 0);
			}
		}
		System.out.println(binær);
		System.out.println("Raw code: " + Integer.toHexString(n));
		System.out.println("Bits: " + binær.length());
	}
}
